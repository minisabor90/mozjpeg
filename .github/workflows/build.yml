name: Build MozJPEG Static Binaries for RHEL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake nasm autoconf automake libtool pkg-config
        sudo apt-get install -y zlib1g-dev libpng-dev
      
    - name: Configure and build MozJPEG statically
      run: |
        # Configure with static options - IMPORTANT: ENABLE_SHARED must be OFF
        mkdir -p build
        cd build
        
        # Note: We're NOT setting LDFLAGS="-static" globally as it causes issues with shared libs
        cmake -G"Unix Makefiles" \
          -DCMAKE_BUILD_TYPE=Release \
          -DENABLE_SHARED=OFF \
          -DENABLE_STATIC=ON \
          -DWITH_JPEG8=ON \
          -DPNG_SUPPORTED=ON \
          -DCMAKE_INSTALL_PREFIX=/opt/mozjpeg \
          ..
        
        # Build
        make -j$(nproc)
      
    - name: Build static binaries with explicit static linking
      run: |
        cd build
        # Now build the executables with static linking
        cd cjpeg
        gcc -static -o cjpeg *.o ../*.a /usr/lib/x86_64-linux-gnu/libpng.a /usr/lib/x86_64-linux-gnu/libz.a -lm
        cd ../djpeg
        gcc -static -o djpeg *.o ../*.a /usr/lib/x86_64-linux-gnu/libpng.a /usr/lib/x86_64-linux-gnu/libz.a -lm
        # Copy the static binaries back to the main build directory
        cp cjpeg/cjpeg ../cjpeg
        cp djpeg/djpeg ../djpeg
      
    - name: Verify static linking
      run: |
        cd build
        echo "Checking if cjpeg is statically linked:"
        file cjpeg
        ldd cjpeg || echo "Good! Binary is statically linked."
        
        echo "Checking if djpeg is statically linked:"
        file djpeg
        ldd djpeg || echo "Good! Binary is statically linked."
      
    - name: Create package
      run: |
        # Create directory structure for the package
        mkdir -p mozjpeg-static/bin
        
        # Copy the static binaries
        cp build/cjpeg build/djpeg mozjpeg-static/bin/
        
        # Create the tarball
        tar -czvf mozjpeg-static-rhel.tar.gz mozjpeg-static/
      
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: mozjpeg-static-rhel
        path: mozjpeg-static-rhel.tar.gz
