name: Build MozJPEG for Linux x64 (Static)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake nasm autoconf automake libtool pkg-config libpng-dev zlib1g-dev
      
    - name: Configure and build
      run: |
        mkdir -p build
        cd build
        cmake -G"Unix Makefiles" \
          -DCMAKE_C_FLAGS="-fPIC -O3" \
          -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DENABLE_SHARED=OFF \
          -DENABLE_STATIC=ON \
          -DWITH_JPEG8=ON \
          -DPNG_SUPPORTED=ON \
          ..
        make -j$(nproc)
      
    - name: Create package
      run: |
        cd build
        make install DESTDIR=../mozjpeg-install
        
        # Copy necessary libraries to lib directory
        mkdir -p ../mozjpeg-install/opt/mozjpeg/lib
        cp /usr/lib/x86_64-linux-gnu/libpng.a ../mozjpeg-install/opt/mozjpeg/lib/
        cp /usr/lib/x86_64-linux-gnu/libz.a ../mozjpeg-install/opt/mozjpeg/lib/
        
        # Create a standalone package with static binaries
        cd ../mozjpeg-install/opt/mozjpeg/bin
        for binary in cjpeg djpeg jpegtran rdjpgcom wrjpgcom tjbench; do
          if [ -f "$binary" ]; then
            # Create a statically linked version
            gcc -static -o "${binary}_static" "$binary" ../../lib/libjpeg.a ../../lib/libturbojpeg.a ../../lib/libpng.a ../../lib/libz.a
            mv "${binary}_static" "$binary"
          fi
        done
        
        cd ../../../..
        tar -czvf mozjpeg-linux-x64-static.tar.gz mozjpeg-install/
      
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: mozjpeg-linux-x64-static
        path: mozjpeg-linux-x64-static.tar.gz
