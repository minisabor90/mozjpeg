name: Build MozJPEG Static Binaries for RHEL

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake nasm autoconf automake libtool pkg-config wget
      
    - name: Download and build static zlib
      run: |
        # Download using GitHub mirror to avoid potential download issues
        wget https://github.com/madler/zlib/releases/download/v1.3/zlib-1.3.tar.gz
        tar xzf zlib-1.3.tar.gz
        cd zlib-1.3
        ./configure --prefix=/tmp/local --static
        make -j$(nproc)
        make install
        cd ..
      
    - name: Download and build static libpng
      run: |
        # Download from GitHub mirror to avoid SourceForge issues
        wget https://github.com/glennrp/libpng/archive/refs/tags/v1.6.47.tar.gz -O libpng.tar.gz
        tar xzf libpng.tar.gz
        cd libpng-1.6.47
        autoreconf -fiv
        CPPFLAGS="-I/tmp/local/include" LDFLAGS="-L/tmp/local/lib" ./configure --prefix=/tmp/local --disable-shared --enable-static
        make -j$(nproc)
        make install
        cd ..
      
    - name: Configure MozJPEG
      run: |
        mkdir -p build
        cd build
        
        # Configure with static options and point to our local static libraries
        PKG_CONFIG_PATH=/tmp/local/lib/pkgconfig \
        CPPFLAGS="-I/tmp/local/include" \
        LDFLAGS="-L/tmp/local/lib" \
        cmake -G"Unix Makefiles" \
          -DCMAKE_BUILD_TYPE=Release \
          -DENABLE_SHARED=OFF \
          -DENABLE_STATIC=ON \
          -DWITH_JPEG8=ON \
          -DPNG_SUPPORTED=ON \
          -DCMAKE_INSTALL_PREFIX=/opt/mozjpeg \
          ..
      
    - name: Build MozJPEG
      run: |
        cd build
        make -j$(nproc)
      
    - name: Build static binaries
      run: |
        cd build
        
        # Compile cjpeg statically
        cd cjpeg
        gcc -static -o cjpeg *.o ../*.a /tmp/local/lib/libpng.a /tmp/local/lib/libz.a -lm
        
        # Compile djpeg statically
        cd ../djpeg
        gcc -static -o djpeg *.o ../*.a /tmp/local/lib/libpng.a /tmp/local/lib/libz.a -lm
        
        # Copy the static binaries back to the main build directory
        cp cjpeg/cjpeg ../cjpeg
        cp djpeg/djpeg ../djpeg
      
    - name: Verify static linking
      run: |
        cd build
        echo "Checking if cjpeg is statically linked:"
        file cjpeg
        ldd cjpeg || echo "Good! Binary is statically linked."
        
        echo "Checking if djpeg is statically linked:"
        file djpeg
        ldd djpeg || echo "Good! Binary is statically linked."
      
    - name: Create package
      run: |
        mkdir -p mozjpeg-static/bin
        cp build/cjpeg build/djpeg mozjpeg-static/bin/
        tar -czvf mozjpeg-static-rhel.tar.gz mozjpeg-static/
      
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: mozjpeg-static-rhel
        path: mozjpeg-static-rhel.tar.gz
